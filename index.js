import{a as w,S as b,i}from"./assets/vendor-tnUJPedx.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const u of n.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&e(u)}).observe(document,{childList:!0,subtree:!0});function a(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function e(t){if(t.ep)return;t.ep=!0;const n=a(t);fetch(t.href,n)}})();const E="48862987-6323d91c4dec4b8453f0076b5",v="https://pixabay.com/api/";async function d(r,s=1,a=40){try{return(await w.get(v,{params:{key:E,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,page:s,per_page:a}})).data}catch(e){throw console.error("Error fetching images:",e),e}}const c=document.querySelector(".gallery");let g;function m(r,s=!1){const a=r.map(e=>`
        <a href="${e.largeImageURL}" class="gallery-item">
            <img src="${e.webformatURL}" alt="${e.tags}" />
            <div class="image-info">
                <p><strong>Likes:</strong> ${e.likes}</p>
                <p><strong>Views:</strong> ${e.views}</p>
                <p><strong>Comments:</strong> ${e.comments}</p>
                <p><strong>Downloads:</strong> ${e.downloads}</p>
            </div>
        </a>
        
    `).join("");s?c.insertAdjacentHTML("beforeend",a):c.innerHTML=a,g?g.refresh():g=new b(".gallery a")}function L(){c.innerHTML=""}function q(){const r=c.firstElementChild;if(r){const{height:s}=r.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}}const l={formElem:document.querySelector("#search-form"),galleryElem:document.querySelector(".gallery"),targetElem:document.querySelector(".js-target"),loaderElem:document.querySelector(".loader")},o={query:"",page:1,perPage:40,totalHits:0};l.formElem.addEventListener("submit",async r=>{r.preventDefault();const s=r.target.elements.searchQuery,a=s.value.trim();if(!a){i.error({title:"Error",message:"Please enter a search term!"});return}o.query=a,o.page=1,L(),y();try{const e=await d(o.query,o.page,o.perPage);o.totalHits=e.totalHits,e.hits.length===0?i.warning({title:"No results",message:"No images found. Try again!"}):(m(e.hits),p())}catch{i.error({title:"Error",message:"Something went wrong. Please try again later."})}finally{h()}s.value=""});async function S(){o.page+=1,y();try{const r=await d(o.query,o.page,o.perPage);m(r.hits,!0),q(),p()}catch{i.error({title:"Error",message:"Something went wrong."})}finally{h()}}const f=new IntersectionObserver(r=>{r[0].isIntersecting&&S()},{rootMargin:"100px"});function p(){o.page*o.perPage<o.totalHits?f.observe(l.targetElem):(f.unobserve(l.targetElem),i.info({title:"End",message:"We're sorry, but you've reached the end of search results."}))}function y(){l.loaderElem.style.display="block"}function h(){l.loaderElem.style.display="none"}
//# sourceMappingURL=index.js.map
